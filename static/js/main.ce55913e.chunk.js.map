{"version":3,"sources":["components/Pagination.js","components/Movie.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","setCurrentPage","page","alert","state","loading","movieLen","postsPerPage","pageNumbers","this","console","log","i","Math","ceil","push","pageList","map","class","onClick","id","Component","Movie","genre_rend","genres","genre","className","src","medium_cover_image","title","year","runtime","rating","summary","MovieList","movieList","movie","App","getMovies","a","axios","get","axios_movies","setState","data","movies","currentPage","currentPosts","indexOfLast","indexOfFirst","slice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce55913e.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './Pagination.css';\r\n\r\nclass Pagination extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:this.props.loading,\r\n            movieLen:this.props.movieLen,\r\n            postsPerPage:this.props.postsPerPage,\r\n        }\r\n    }\r\n\r\n    setCurrentPage=(page)=>{\r\n        alert(page);\r\n        this.props.setCurrentPage(page);\r\n    }\r\n\r\n    render(){\r\n        let pageNumbers = [];\r\n        const {movieLen,postsPerPage}=this.props;\r\n        console.log(\"pn:\"+movieLen);\r\n        console.log(\"pn:\"+postsPerPage);\r\n        for (let i = 1; i <= Math.ceil(movieLen / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n        }\r\n        console.log(pageNumbers);\r\n\r\n        const pageList=pageNumbers.map(page=>(\r\n        <span class=\"page\" onClick={()=>this.setCurrentPage(page)}>\r\n            {page}\r\n        </span>\r\n            )\r\n        );\r\n\r\n        return (\r\n    <div id=\"Pagination\">\r\n        <span>페이지당 포스트 갯수:{this.props.postsPerPage}</span><br/>\r\n        <span>총 포스트 갯수:{this.props.movieLen}</span><br/>\r\n        <div id=\"page_list\">\r\n        {pageList}\r\n        </div>\r\n    </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        const genre_rend=\r\n        <div id=\"movie_genre\">\r\n            genre:\r\n        {this.props.genres.map((genre)=>{return <span className=\"genre\">{genre}</span>})}\r\n        </div>\r\n\r\n        return(\r\n            <div key={this.props.id} id=\"movie_posts\">\r\n                <div id=\"movie_left\">\r\n                    <div id=\"left_comp\">\r\n                        <span className=\"cover_back\">\r\n                        <img src={this.props.medium_cover_image}/>\r\n                        </span>\r\n                    \r\n                        <span className=\"down\">Download</span>\r\n                    </div>   \r\n                </div>\r\n\r\n                <div id=\"movie_right\">\r\n                    <div id=\"right_comp\">\r\n                    <div className=\"movie_title\">{this.props.title}</div>\r\n                    <div className=\"movie_year\">{this.props.year}</div>\r\n                    {genre_rend}\r\n                    <div className=\"movie_time\">{this.props.runtime}min</div>\r\n                    <div className=\"movie_rating\"><img src=\"./images/logo-imdb.svg\"/>{this.props.rating}</div>\r\n                    <div class=\"movie_summary\">{this.props.summary}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;","\r\nimport React, { Component } from 'react';\r\n\r\nimport Movie from './Movie';\r\n\r\nclass MovieList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:this.props.loading,\r\n            movieList:this.props.movieList,\r\n        }\r\n    }\r\n\r\n    render(){\r\n    \r\n    const {loading,movieList}=this.props;\r\n\r\n        return (\r\n    <div className=\"MovieList\">\r\n\r\n  { loading &&\r\n    <div> loading... </div>\r\n  }\r\n  <div>\r\n    { \r\n    movieList.map(movie=>(\r\n      <Movie key={movie.id}\r\n      medium_cover_image={movie.medium_cover_image}\r\n      title={movie.title}\r\n      year={movie.year}\r\n      genres={movie.genres}\r\n      runtime={movie.runtime}\r\n      rating={movie.rating}\r\n      summary={movie.summary}\r\n      ></Movie>\r\n      \r\n        )\r\n    )\r\n    }\r\n  </div>\r\n\r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Pagination from './components/Pagination';\nimport MovieList from './components/MovieList';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n            movieList:[\n\n            ],\n            loading:false,\n            currentPage:1,\n            postsPerPage:3\n        }\n  }\n\n  getMovies = async()=>{\n    const axios_movies \n    = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n    console.log(axios_movies);\n    this.setState({movieList:axios_movies.data.data.movies});\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  setCurrentPage=(page)=>{\n    alert(page);\n    this.setState({\n      currentPage:page\n    })\n  }\n\n  currentPosts=(movieList)=> {\n    const {currentPage,postsPerPage}=this.state;\n    const indexOfLast = currentPage*postsPerPage;\n    const indexOfFirst = indexOfLast-postsPerPage;\n    const slicePosts = movieList.slice(indexOfFirst,indexOfLast);\n    return slicePosts;\n  }\n\n  render(){\n\n    const{movieList,loading,postsPerPage}=this.state;\n\n    return (\n    <div className=\"App\">\n      <MovieList movieList={this.currentPosts(movieList)} loading={loading}></MovieList>\n      <Pagination postsPerPage={postsPerPage} movieLen={movieList.length} \n      setCurrentPage={this.setCurrentPage}></Pagination>\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}